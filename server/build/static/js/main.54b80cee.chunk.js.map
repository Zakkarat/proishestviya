{"version":3,"sources":["Redux/actions.js","components/Navbar.js","stylesheets/styled.js","components/MovieItem.js","components/MovieLayout.js","App.js","Redux/reducers.js","serviceWorker.js","index.js"],"names":["voting","votes","type","payload","useStyles","makeStyles","theme","formControlLang","margin","spacing","minWidth","backgroundColor","borderRadius","formControlSort","formControlRole","maxWidth","selectBackground","color","paddingLeft","root","padding","display","alignItems","width","input","marginLeft","flex","iconButton","menuToCenter","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","roles","sortOptions","mapDispatchToProps","changeLang","language","rolesFiltering","sorting","sortType","search","searchWord","connect","urlReducer","filters","classes","useState","lang","setLang","role","setRole","sort","setSort","setSerchword","isOpen","setIsOpen","console","log","dark","expand","className","id","navbar","FormControl","Select","multiple","displayEmpty","value","onChange","target","Input","renderValue","selected","length","join","MenuItem","disabled","map","name","key","Checkbox","checked","indexOf","ListItemText","primary","Paper","component","IconButton","aria-label","InputBase","placeholder","inputProps","right","variant","onClick","AppStyles","styled","div","props","cookies","counter","setCounter","sendCookies","a","axios","post","token","get","then","res","height","transform","src","poster","top","hover","waves","tag","title","desc","rounded","e","set","crypto","randomBytes","toString","Count","championList","setChampionList","counters","setCounters","useEffect","data","champs","Object","keys","reduce","row","elem","i","push","reverse","catch","err","fetchData","mergeCounters","forEach","count","assign","filter","tags","every","match","RegExp","filterCheck","card","withCookies","gotData","setGotData","setVotes","params","fetchByCookies","fluid","intialState","filterState","combineReducers","state","action","Boolean","window","location","hostname","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.54b80cee.chunk.js","sourcesContent":["export const CHANGE_LANG = \"CHANGE_LANG\"\r\nexport const ROLES_FILTERING = \"ROLES_FILTERING\"\r\nexport const SORTING = \"SORTING\"\r\nexport const SEARCH = \"SEARCH\"\r\nexport const VOTING = \"VOTING\"\r\n\r\nexport const changeLang = (language) => ({\r\n    type: CHANGE_LANG,\r\n    payload: { language }\r\n})\r\n\r\nexport const rolesFiltering = (roles) => ({\r\n    type: ROLES_FILTERING,\r\n    payload: [...roles]\r\n})\r\n\r\nexport const sorting = (sortType) => ({\r\n    type: SORTING,\r\n    payload: sortType\r\n})\r\n\r\nexport const search = (searchWord) => ({\r\n    type: SEARCH,\r\n    payload: searchWord\r\n})\r\nexport const voting = (votes) => ({\r\n    type: VOTING,\r\n    payload: votes\r\n})","import React, { useState } from \"react\";\r\nimport {\r\n  MDBNavbar,\r\n  MDBNavbarBrand,\r\n  MDBNavItem,\r\n  MDBNavbarToggler,\r\n  MDBCollapse,\r\n  MDBNavbarNav,\r\n} from \"mdbreact\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { changeLang, rolesFiltering, sorting, search } from \"../Redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  formControlLang: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 80,\r\n    backgroundColor: \"#2f3c42\",\r\n    borderRadius: \"4px\"\r\n  },\r\n  formControlSort: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 90\r\n  },\r\n  formControlRole: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 90,\r\n    maxWidth: 285\r\n  },\r\n  selectBackground: {\r\n    backgroundColor: \"#2f3c42\",\r\n    color: \"white\",\r\n    paddingLeft: \"5px\",\r\n    borderRadius: \"3px\"\r\n  },\r\n  root: {\r\n    padding: \"2px 4px\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#2f3c42\",\r\n    width: 285\r\n  },\r\n  input: {\r\n    marginLeft: theme.spacing(1),\r\n    flex: 1,\r\n    color: \"white\"\r\n  },\r\n  iconButton: {\r\n    padding: 10\r\n  },\r\n  menuToCenter: {\r\n    alignItems: \"center\",\r\n  }\r\n}));\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst MenuProps = {\r\n  PaperProps: {\r\n    style: {\r\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n      width: 250\r\n    }\r\n  }\r\n};\r\n\r\nconst roles = [\"Tank\", \"Mage\", \"Assassin\", \"Support\", \"Fighter\", \"Marksman\"];\r\nconst sortOptions = [\"ASC ↑\", \"DESC ↓\"];\r\nconst Navbar = ({ urlReducer, filters, votes, changeLang, rolesFiltering, sorting, search }) => {\r\n  const {language} = urlReducer;\r\n  const classes = useStyles();\r\n  const [lang, setLang] = useState(language);\r\n  const [role, setRole] = useState(filters.roles);\r\n  const [sort, setSort] = useState(filters.sort);\r\n  const [searchWord, setSerchword] = useState(filters.searchWord);\r\n  const [isOpen, setIsOpen] = useState(\"false\");\r\n  const toggleCollapse = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const handleChangeSearch = ({target}) => {\r\n    setSerchword(target.value)\r\n    search(target.value)\r\n  }\r\n  const handleChange = ({ target }) => {\r\n    setLang(target.value);\r\n    changeLang(target.value);\r\n  };\r\n  const handleChangeRole = ({ target }) => {\r\n    setRole(target.value);\r\n    rolesFiltering(target.value)\r\n  };\r\n\r\n  const handleChangeSort = ({ target }) => {\r\n    setSort(target.value);\r\n    sorting(target.value)\r\n  };\r\n\r\n  console.log(language);\r\n  return (\r\n    <>\r\n      <MDBNavbar color=\"special-color-dark\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n  <strong className=\"white-text\">Current votes: {votes}</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={isOpen} navbar>\r\n        <MDBNavbarNav className={classes.menuToCenter}>\r\n          <FormControl className={classes.formControlRole}>\r\n            <Select\r\n              multiple\r\n              displayEmpty\r\n              className={classes.selectBackground}\r\n              value={role}\r\n              onChange={handleChangeRole}\r\n              input={<Input />}\r\n              renderValue={selected => {\r\n                if (selected.length === 0) {\r\n                  return 'Roles';\r\n                }\r\n\r\n                return selected.join(\", \");\r\n              }}\r\n              MenuProps={MenuProps}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                Roles\r\n              </MenuItem>\r\n              {roles.map(name => (\r\n                <MenuItem key={name} value={name}>\r\n                  <Checkbox checked={role.indexOf(name) > -1} />\r\n                  <ListItemText primary={name} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <Paper component=\"form\" className={classes.root}>\r\n            <IconButton\r\n              className={classes.iconButton}\r\n              aria-label=\"menu\"\r\n            ></IconButton>\r\n            <InputBase\r\n              className={classes.input}\r\n              placeholder=\"Search\"\r\n              value={searchWord}\r\n              onChange={handleChangeSearch}\r\n              inputProps={{ \"aria-label\": \"search google maps\" }}\r\n            />\r\n            <IconButton\r\n              className={classes.iconButton}\r\n              aria-label=\"search\"\r\n            >\r\n              <SearchIcon />\r\n            </IconButton>\r\n          </Paper>\r\n          <FormControl className={classes.formControlSort}>\r\n            <Select\r\n              displayEmpty\r\n              className={classes.selectBackground}\r\n              value={sort}\r\n              onChange={handleChangeSort}\r\n            >\r\n              <MenuItem disabled value=\"\">\r\n                Sort\r\n              </MenuItem>\r\n              {sortOptions.map(name => (\r\n                <MenuItem key={name} value={name}>\r\n                  {name}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </MDBNavbarNav>\r\n        <MDBNavbarNav className={classes.menuToCenter} right>\r\n          <MDBNavItem>\r\n            <FormControl variant=\"outlined\" className={classes.formControlLang}>\r\n              <Select\r\n                className=\"text-white\"\r\n                value={lang}\r\n                onChange={handleChange}\r\n              >\r\n                <MenuItem value={\"en_US\"}>EN</MenuItem>\r\n                <MenuItem value={\"ru_RU\"}>RU</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </MDBNavItem>\r\n        </MDBNavbarNav>\r\n        </MDBCollapse>\r\n        <MDBNavbarToggler onClick={toggleCollapse} />\r\n      </MDBNavbar>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ urlReducer, filters, votes }) => ({\r\n  urlReducer, filters, votes\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  changeLang, rolesFiltering, sorting, search\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Navbar);\r\n","import styled from \"styled-components\";\r\n\r\nexport const AppStyles = styled.div`\r\n    .toSpecialColor {\r\n       background-color: #37474F;\r\n       height: 100vh;\r\n    }\r\n    .secondary-text {\r\n        color: #9e9e9e !important;\r\n    }\r\n    .color-apply {\r\n        background-color:  #37474F;\r\n    }\r\n    .color-to-card {\r\n        background-color: #252f33;\r\n        display: grid;\r\n    }\r\n    .normalize-card {\r\n        background-color: #252f33;\r\n    }\r\n`","import React, { useState } from \"react\";\r\nimport {\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardImage,\r\n  MDBCardText,\r\n  MDBCardBody,\r\n  MDBBtn\r\n} from \"mdbreact\";\r\nimport { voting } from \"../Redux/actions\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport crypto from 'crypto';\r\nconst MovieItem = props => {\r\n  const {cookies} = props;\r\n  const [counter, setCounter] = useState(props.counter ? props.counter : 0);\r\n  const sendCookies = async(votes) => {\r\n    await axios.post(\"/cookies\", {\r\n      token: cookies.get('token'),\r\n      votes\r\n    }).then(res => console.log(res));\r\n  }\r\n  const handleClick = e => {\r\n    if (props.votes > 0) {\r\n      props.voting(props.votes - 1);\r\n      setCounter(counter + 1);\r\n      if(!cookies.get('token')) {\r\n        cookies.set('token', crypto.randomBytes(16).toString('base64'));\r\n      }\r\n      sendCookies(props.votes - 1)\r\n      axios\r\n        .post(\"/counters\", {\r\n          id: props.id,\r\n          Count: counter\r\n        })\r\n        .then(res => console.log(res));\r\n    }\r\n\r\n  };\r\n  return (\r\n    <MDBCard className=\"normalize-card\" style={{ width: \"16rem\" }}>\r\n      <MDBCardImage\r\n        style={{ height: \"28rem\", transform: \"scale(1.08)\" }}\r\n        src={props.poster}\r\n        top\r\n        hover\r\n        waves={false}\r\n      ></MDBCardImage>\r\n      <MDBCardBody className=\"color-to-card text-white justify-content-center\">\r\n        <MDBCardTitle tag=\"h5\" className=\"mb-0 text-center\">\r\n          <strong>{props.name}</strong>\r\n        </MDBCardTitle>\r\n        <p className=\"font-weight-bold secondary-text text-center mb-0\">\r\n          {props.title}\r\n        </p>\r\n        <MDBCardText className=\"mt-1 text-center\">\r\n          {props.language === \"en_US\" ? \"Roles\" : \"Роли\"} : {\" \"}\r\n          {props.desc.join(\", \")}\r\n        </MDBCardText>\r\n        <MDBBtn rounded color=\"secondary\" className=\"\" onClick={handleClick}>\r\n          {props.language === \"en_US\" ? \"Vote\" : \"Проголосовать\"}\r\n        </MDBBtn>\r\n        <p className=\"font-weight-bold secondary-text text-center mb-0\">\r\n  {props.language === \"en_US\" ? \"Votes for champion\" : \"Отдано голосов\"} : {\" \"} {counter}\r\n        </p>\r\n      </MDBCardBody>\r\n    </MDBCard>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ votes }) => ({\r\n  votes\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  voting\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(MovieItem);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MovieItem from \"./MovieItem\";\r\nimport { MDBCol, MDBRow } from \"mdbreact\";\r\nimport { connect } from \"react-redux\";\r\nimport {voting} from '../Redux/actions'\r\n\r\nconst MovieLayout = ({ urlReducer, filters, cookies, votes, voting }) => {\r\n  const { language } = urlReducer;\r\n  const { sort, searchWord, roles } = filters;\r\n  const [championList, setChampionList] = useState([]);\r\n  const [counters, setCounters] = useState([]);\r\n  useEffect(() => {\r\n    if(votes || votes === 0) {\r\n      voting(votes);\r\n    }\r\n    const fetchData = async () => {\r\n      await axios('/counters').then(({data}) => {\r\n        setCounters(data);\r\n      })\r\n      await axios(\r\n        `http://ddragon.leagueoflegends.com/cdn/9.22.1/data/${language}/champion.json`\r\n      )\r\n        .then(({ data }) => {\r\n          data = data.data;\r\n          let champs = Object.keys(data).reduce((row, elem, i) => {\r\n            row.push(data[elem]);\r\n            return row;\r\n          }, []);\r\n          if (sort === \"DESC ↓\") {\r\n            champs.reverse();\r\n          }\r\n          setChampionList(champs);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        }) \r\n      };\r\n    fetchData();\r\n    if(votes) {\r\n      voting(votes);\r\n    }\r\n  }, [language, sort, votes]);\r\n  const filterCheck = () => {\r\n    let data = championList;\r\n    if (roles.length !== 0) {\r\n      data = data.filter(elem =>\r\n        elem.tags.every(role => roles.indexOf(role) + 1)\r\n      );\r\n    }\r\n    if (searchWord) {\r\n      data = data.filter(elem => {\r\n        return elem.name.match(new RegExp(searchWord, \"ig\"));\r\n      });\r\n    }\r\n    return mergeCounters(data);\r\n  };\r\n  const mergeCounters = data => {\r\n    console.log(counters)\r\n    data.forEach(elem => {\r\n      counters.forEach(count => {\r\n        if(elem.key === count.key.toString()) {\r\n          Object.assign(elem, count);\r\n        }\r\n      })\r\n    });\r\n    return data\r\n  };\r\n  return (\r\n    <MDBRow>\r\n      {championList\r\n        ? filterCheck(championList).map(card => (\r\n            <MDBCol\r\n              key={card.key}\r\n              className=\"mt-4 mb-4 mx-auto d-flex justify-content-center\"\r\n            >\r\n              <MovieItem\r\n                id={card.key}\r\n                name={card.name}\r\n                title={card.title}\r\n                desc={card.tags}\r\n                language={language}\r\n                counter={card.counter}\r\n                cookies={cookies}\r\n                poster={`http://ddragon.leagueoflegends.com/cdn/img/champion/loading/${card.id}_0.jpg`}\r\n              ></MovieItem>\r\n            </MDBCol>\r\n          ))\r\n        : null}\r\n    </MDBRow>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ urlReducer, filters }) => ({\r\n  urlReducer,\r\n  filters\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  voting\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieLayout);\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./stylesheets/App.css\";\nimport \"./stylesheets/normalize.css\";\nimport Navbar from \"./components/Navbar\";\nimport {MDBContainer} from \"mdbreact\";\nimport {AppStyles} from \"./stylesheets/styled\";\nimport MovieLayout from \"./components/MovieLayout\";\nimport {withCookies} from \"react-cookie\";\nimport axios from \"axios\";\n\nconst App = ({cookies}) => {\n  const [gotData, setGotData] = useState(cookies.get('token'));\n  const [votes, setVotes] = useState();\n  useEffect(() => {\n    const fetchByCookies = async() => {\n      await axios.get(\"/cookies\", {\n        params: {\n        token: cookies.get('token')\n        }\n      }).then(({data}) => {\n        console.log(data);\n        setGotData(false);\n        setVotes(data[0].votes);\n      })\n    }\n    if(gotData) {\n     fetchByCookies()\n    }\n  })\n  return (\n    <AppStyles>\n      <div className=\"toSpecialColor\">\n      <Navbar ></Navbar>\n      <MDBContainer fluid className=\"color-apply px-5 pb-5\"><MovieLayout votes={votes} cookies={cookies} /></MDBContainer>\n      </div>\n    </AppStyles>\n  );\n}\n\nexport default withCookies(App);\n","import { CHANGE_LANG, SORTING, SEARCH, ROLES_FILTERING, VOTING } from \"./actions\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst intialState = {\r\n  language: \"en_US\"\r\n};\r\n\r\nconst intialVotes = 3;\r\n\r\nconst filterState = {\r\n  searchWord: \"\",\r\n  sort: \"\",\r\n  roles: []\r\n};\r\n\r\nconst urlReducer = (state = intialState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_LANG:\r\n      state = action.payload;\r\n      return state;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst filters = (state = filterState, action) => {\r\n  switch (action.type) {\r\n    case SORTING:\r\n      return {...state, sort: action.payload};\r\n    case SEARCH:\r\n      return {...state, searchWord: action.payload};\r\n    case ROLES_FILTERING:\r\n      return {...state, roles: [...action.payload]};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst votes = (state = intialVotes, action) => {\r\n  switch (action.type) {\r\n    case VOTING:\r\n      state = action.payload;\r\n      return state;\r\n      default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default combineReducers({ urlReducer, filters, votes });\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.css';\nimport App from './App';\nimport { Provider } from \"react-redux\";\nimport { createStore} from \"redux\";\nimport reducer from './Redux/reducers';\nimport * as serviceWorker from './serviceWorker';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\nimport {CookiesProvider} from 'react-cookie';\n\nconst store = createStore(\n    reducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n   );\n\nReactDOM.render(<CookiesProvider><Provider store={store}><App/></Provider></CookiesProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}